@model TopMenuModel
@using Nop.Core.Domain.Catalog
@using Nop.Core.Domain.Topics

<!-- Spinner -->
<div id="spinner" class="show bg-white position-fixed translate-middle w-100 vh-100 top-50 start-50 d-flex align-items-center justify-content-center">
    <div class="spinner-border text-primary" style="width: 3rem; height: 3rem;" role="status">
        <span class="sr-only">Loading...</span>
    </div>
</div>
<!-- Spinner End -->
<!-- Topbar -->

<!-- Topbar End -->
<!-- Navbar & Hero Start -->
<div class="container-fluid position-relative p-0">
    <nav class="navbar navbar-expand-lg navbar-light px-4 px-lg-5 py-3 py-lg-0">
        <div class="header-logo">
            @await Component.InvokeAsync(typeof(LogoViewComponent))
        </div>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarCollapse">
            <span class="fa fa-bars"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarCollapse">
            <ul class="navbar-nav ms-auto py-0">
                @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.HeaderMenuBefore, additionalData = Model })
                @if (Model.DisplayHomepageMenuItem)
                {
                    <li class="nav-item"><a href="@Url.RouteUrl("Homepage")" class="nav-link"><i class="fa fa-home fa-fw"></i></a></li>
                }
                @if (!Model.UseAjaxMenu)
                {
                    var rootCategories = Model.Categories.Where(x => x.IncludeInTopMenu).ToList();
                    @foreach (var category in rootCategories)
                    {
                        var categoryLineModel = new TopMenuModel.CategoryLineModel
                    {
                        Category = category
                    };
                        @await Html.PartialAsync("_CategoryLine.TopMenu", categoryLineModel)
                    }
                }
                @foreach (var topic in Model.Topics)
                {
                    <li class="nav-item"><a href="@(Url.RouteUrl<Topic>(new { SeName = topic.SeName }))" class="nav-link">@topic.Name</a></li>
                }
                @if (Model.NewProductsEnabled && Model.DisplayNewProductsMenuItem)
                {
                    <li class="nav-item"><a href="@Url.RouteUrl("NewProducts")" class="nav-link">@T("Products.NewProducts")</a></li>
                }
                @if (Model.DisplayProductSearchMenuItem)
                {
                    <li class="nav-item"><a href="@Url.RouteUrl("ProductSearch")" class="nav-link">@T("Search")</a></li>
                }
                @if (Model.DisplayCustomerInfoMenuItem)
                {
                    <li class="nav-item"><a href="@Url.RouteUrl("CustomerInfo")" class="nav-link">@T("Account.MyAccount")</a></li>
                }
                @if (Model.BlogEnabled && Model.DisplayBlogMenuItem)
                {
                    <li class="nav-item"><a href="@Url.RouteUrl("Blog")" class="nav-link">@T("Blog")</a></li>
                }
                @if (Model.ForumEnabled && Model.DisplayForumsMenuItem)
                {
                    <li class="nav-item"><a href="@Url.RouteUrl("Boards")" class="nav-link">@T("Forum.Forums")</a></li>
                }
                @if (Model.DisplayContactUsMenuItem)
                {
                    <li class="nav-item"><a href="@Url.RouteUrl("ContactUs")" class="nav-link">@T("ContactUs")</a></li>
                }
                @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.HeaderMenuAfter, additionalData = Model })
            </ul>
            <a href="" class="btn btn-primary rounded-pill py-2 px-4">Register</a>
        </div>
    </nav>



   
@if (Model.UseAjaxMenu)
{
    <script asp-location="Footer">
            $(document).ready(function () {
                $('#mobile-menu .dropdown .fa-angle-down').on('click', function () {
                    var $this = $(this);
                    $this.siblings("ul.dropdown-menu").slideToggle("slow");
                });
                var localized_data = {
                    AjaxFailure: "@T("MainMenu.AjaxFailure")"
                };
                mainMenu.init('@Url.RouteUrl("GetCatalogRoot")', '@Url.RouteUrl("GetCatalogSubCategories")', 'ul.top-menu.notmobile', 'ul.top-menu.mobile', localized_data);
            });
    </script>
    <script src="~/js/public.menu.js" asp-location="Footer"></script>
}
else
{
    <script asp-location="Footer">
       $(document).ready(function () {
            $("#mobile-menu .dropdown .fa-angle-down").on('click', function () {
                var $this = $(this);
                $this.siblings("ul.dropdown-menu").slideToggle("slow", function () {
                    if ($this.siblings("ul.dropdown-menu").css('display') == 'block')
                        $this.addClass("rotate");
                    else if ($this.siblings("ul.dropdown-menu").css('display') == 'none')
                        $this.removeClass("rotate");
                });
            });
        });
    </script>
}

