@model FooterModel

@using Nop.Core
@using Nop.Core.Domain.Tax
@using Nop.Core.Domain.Topics

@inject IWorkContext workContext

<!-- Footer Start -->
<div class="container-fluid bg-dark text-light footer pt-5 mt-5 wow fadeIn" data-wow-delay="0.1s">
    <div class="container py-5">
        <div class="footer-top">
            <div class="footer-zone row g-5">
                <!-- Information -->
                <div class="col-lg-3 col-md-6 column information">
                    <h4 class="text-white mb-3">@T("Footer.Information")</h4>
                    <ul class="nav nav-list">
                        @if (Model.SitemapEnabled && Model.DisplaySitemapFooterItem)
                        {
                            <li><a class="btn btn-link" href="@Url.RouteUrl("Sitemap")">@T("Sitemap")</a></li>
                        }
                        @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn1).ToList())
                        {
                            <li><a class="btn btn-link" href="@(Url.RouteUrl<Topic>(new { SeName = topic.SeName }))">@topic.Name</a></li>
                        }
                        @if (Model.DisplayContactUsFooterItem)
                        {
                            <li><a class="btn btn-link" href="@Url.RouteUrl("ContactUs")">@T("ContactUs")</a></li>
                        }
                    </ul>
                </div>
                <!-- Customer Service -->
                <div class="col-lg-3 col-md-6 column customer-service">
                    <h4 class="text-white mb-3">@T("Footer.CustomerService")</h4>
                    <ul class="nav nav-list">
                        @if (Model.SearchEnabled && Model.DisplayProductSearchFooterItem)
                        {
                            <li><a class="btn btn-link" href="@Url.RouteUrl("ProductSearch")">@T("Search")</a> </li>
                        }
                        @if (Model.NewsEnabled && Model.DisplayNewsFooterItem)
                        {
                            <li><a class="btn btn-link" href="@Url.RouteUrl("NewsArchive")">@T("News")</a></li>
                        }
                        @if (Model.BlogEnabled && Model.DisplayBlogFooterItem)
                        {
                            <li><a class="btn btn-link" href="@Url.RouteUrl("Blog")">@T("Blog")</a></li>
                        }
                        @if (Model.ForumEnabled && Model.DisplayForumsFooterItem)
                        {
                            <li><a class="btn btn-link" href="@Url.RouteUrl("Boards")">@T("Forum.Forums")</a></li>
                        }
                        @if (Model.RecentlyViewedProductsEnabled && Model.DisplayRecentlyViewedProductsFooterItem)
                        {
                            <li><a class="btn btn-link" href="@Url.RouteUrl("RecentlyViewedProducts")">@T("Products.RecentlyViewedProducts")</a></li>
                        }
                        @if (Model.CompareProductsEnabled && Model.DisplayCompareProductsFooterItem)
                        {
                            <li><a class="btn btn-link" href="@Url.RouteUrl("CompareProducts")">@T("Products.Compare.List")</a></li>
                        }
                        @if (Model.NewProductsEnabled && Model.DisplayNewProductsFooterItem)
                        {
                            <li><a class="btn btn-link" href="@Url.RouteUrl("NewProducts")">@T("Products.NewProducts")</a></li>
                        }
                        @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn2).ToList())
                        {
                            <li><a class="btn btn-link" href="@(Url.RouteUrl<Topic>(new { SeName = topic.SeName }))">@topic.Name</a></li>
                        }
                        @if (Model.AllowCustomersToCheckGiftCardBalance)
                        {
                            <li><a class="btn btn-link" href="@Url.RouteUrl("CheckGiftCardBalance")">@T("CheckGiftCardBalance")</a></li>
                        }
                    </ul>
                </div>
                <!-- My Account -->
                <div class="col-lg-3 col-md-6 column my-account">
                    <h4 class="text-white mb-3">@T("Footer.MyAccount")</h4>
                    <ul class="nav nav-list">
                        @if (Model.DisplayCustomerInfoFooterItem)
                        {
                            <li><a class="btn btn-link" href="@Url.RouteUrl("CustomerInfo")">@T("Account.MyAccount")</a></li>
                        }
                        @if (Model.DisplayCustomerOrdersFooterItem)
                        {
                            <li><a class="btn btn-link" href="@Url.RouteUrl("CustomerOrders")">@T("Account.CustomerOrders")</a></li>
                        }
                        @if (Model.DisplayCustomerAddressesFooterItem)
                        {
                            <li><a class="btn btn-link" href="@Url.RouteUrl("CustomerAddresses")">@T("Account.CustomerAddresses")</a></li>
                        }
                        @if (Model.ShoppingCartEnabled && Model.DisplayShoppingCartFooterItem)
                        {
                            <li><a class="btn btn-link" href="@Url.RouteUrl("ShoppingCart")">@T("ShoppingCart")</a></li>
                        }
                        @if (Model.WishlistEnabled && Model.DisplayWishlistFooterItem)
                        {
                            <li><a class="btn btn-link" href="@Url.RouteUrl("Wishlist")">@T("Wishlist")</a></li>
                        }
                        @if (Model.AllowCustomersToApplyForVendorAccount && Model.DisplayApplyVendorAccountFooterItem)
                        {
                            <li><a class="btn btn-link" href="@Url.RouteUrl("ApplyVendorAccount")">@T("Vendors.ApplyAccount")</a></li>
                        }
                        @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn3).ToList())
                        {
                            <li><a class="btn btn-link" href="@(Url.RouteUrl<Topic>(new { SeName = topic.SeName }))">@topic.Name</a></li>
                        }
                    </ul>
                </div>
                <!-- Follow Us -->
                <div class="col-lg-3 col-md-6 column follow-us">
                    <h4 class="text-white mb-3">@T("Footer.FollowUs")</h4>
                    @await Component.InvokeAsync(typeof(SocialButtonsViewComponent))
                    <div class="newsletter">
                        @await Component.InvokeAsync(typeof(NewsletterBoxViewComponent))
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Footer Bottom -->
    <div class="container">
        <div class="footer-bottom">
            <div class="row">
                <div class="col-md-6 text-center text-md-start mb-3 mb-md-0">
                    &copy; <a class="border-bottom" href="#">Your Site Name</a>, All Right Reserved.
                    Designed By <a class="border-bottom" href="https://htmlcodex.com">HTML Codex</a>
                </div>
                <div class="col-md-6 text-center text-md-end">
                    <div class="footer-menu">
                        <a href="">Home</a>
                        <a href="">Cookies</a>
                        <a href="">Help</a>
                        <a href="">FQAs</a>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12 footer-store-theme">
                @await Component.InvokeAsync(typeof(StoreThemeSelectorViewComponent))
                <div class="footer-disclaimer">
                    @T("Content.CopyrightNotice", DateTime.Now.Year.ToString(), Model.StoreName)
                </div>
            </div>
        </div>
    </div>
    @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.Footer, additionalData = Model })
</div>
<!-- Footer End -->
